<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>容器 on Catfish</title><link>https://www.catfish.top/tags/%E5%AE%B9%E5%99%A8/</link><description>Recent content in 容器 on Catfish</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 20 Jul 2021 11:05:00 +0800</lastBuildDate><atom:link href="https://www.catfish.top/tags/%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes初探（三）</title><link>https://www.catfish.top/p/k8s-basic-3/</link><pubDate>Tue, 20 Jul 2021 11:05:00 +0800</pubDate><guid>https://www.catfish.top/p/k8s-basic-3/</guid><description>Katacoda在线课：https://www.katacoda.com/courses/kubernetes/kubectl-run-containers
本系列教程希望能通过交互式学习网站与传统方式结合，更高效、容易的学习知识。 本系列教程将使用 Katacoda在线学习平台 完成学习。
在此场景中，将学习如何使用 Kubectl 创建和启动Deployments, Replication Controllers并通过Services对外开放接口，而无需编写 yaml 定义。这样便可以快速将容器启动到集群上。
启动集群 首先，我们需要启动一个 Kubernetes 集群。
执行以下命令启动集群并下载Kubectl CLI。
$ minikube start --wait=false * minikube v1.8.1 on Ubuntu 18.04 * Using the none driver based on user configuration * Running on localhost (CPUs=2, Memory=2460MB, Disk=145651MB) ... * OS release is Ubuntu 18.04.4 LTS * Preparing Kubernetes v1.17.3 on Docker 19.03.6 ... - kubelet.resolv-conf=/run/systemd/resolve/resolv.conf * Launching Kubernetes ... * Enabling addons: default-storageclass, storage-provisioner * Configuring local host environment .</description></item><item><title>Kubernetes初探（二）</title><link>https://www.catfish.top/p/k8s-basic-2/</link><pubDate>Tue, 20 Jul 2021 11:05:00 +0800</pubDate><guid>https://www.catfish.top/p/k8s-basic-2/</guid><description>Katacoda在线课：https://www.katacoda.com/courses/kubernetes/getting-started-with-kubeadm
本系列教程希望能通过交互式学习网站与传统方式结合，更高效、容易的学习知识。 本系列教程将使用 Katacoda在线学习平台 完成学习。
在此场景中，您将学习如何使用 Kubeadm 启动 Kubernetes 集群。
Kubeadm 解决了TLS 加密配置、 Kubernetes 核心组件部署和额外节点集群加入的问题。启动的集群通过 RBAC 等机制开箱即用。
关于Kubeadm的更多信息可以参考： https://github.com/kubernetes/kubeadm
初始化 Master Kubeadm 已经安装在节点上。软件包适用于 Ubuntu 16.04+、CentOS 7 或 HypriotOS v1.0.1+。
初始化集群的第一步是启动Master节点。 Master节点 负责运行控制平面组件、etcd 和 API 服务器。客户端能够与 API 通信，能够完成工作负载的调度和集群状态的管理。
任务 下面的命令将使用已知的Token简化初始化集群的步骤。
controlplane $ kubeadm init --token=102952.1a7dd4cc8d1f4cc5 --kubernetes-version $(kubeadm version -o short) [init] Using Kubernetes version: v1.14.0 [preflight] Running pre-flight checks [preflight] Pulling images required for setting up a Kubernetes cluster [preflight] This might take a minute or two, depending on the speed of your internet connection [preflight] You can also perform this action in beforehand using &amp;#39;kubeadm config images pull&amp;#39; [kubelet-start] Writing kubelet environment file with flags to file &amp;#34;/var/lib/kubelet/kubeadm-flags.</description></item><item><title>Kubernetes初探（一）</title><link>https://www.catfish.top/p/k8s-basic-1/</link><pubDate>Tue, 20 Jul 2021 10:21:00 +0800</pubDate><guid>https://www.catfish.top/p/k8s-basic-1/</guid><description>Katacoda在线课：https://www.katacoda.com/courses/kubernetes/launch-single-node-cluster
本系列教程希望能通过交互式学习网站与传统方式结合，更高效、容易的学习知识。 本系列教程将使用 Katacoda在线学习平台 完成学习。
Minikube 是一个可以轻松在本地运行 Kubernetes 的工具。 Minikube 是一个在本地上计算机的虚拟机内运行一个单节点 Kubernetes 集群，便于用户能够完成日常开发工作，同时也能够让新用户快速了解Kubernetes。
详情见： https://github.com/kubernetes/minikube
步骤 1 - 启动Minikube Minikube已经安装并配置到环境中。通过运行 minikube version 命令检查它是否已正确安装。
$ minikube version minikube version: v1.8.1 commit: cbda04cf6bbe65e987ae52bb393c10099ab62014 通过运行 minikube start 命令启动集群。
$ minikube start --wait=false * minikube v1.8.1 on Ubuntu 18.04 * Using the none driver based on user configuration * Running on localhost (CPUs=2, Memory=2460MB, Disk=145651MB) ... * OS release is Ubuntu 18.04.4 LTS * Preparing Kubernetes v1.</description></item></channel></rss>